# ============================
#  EliteLogs Configuration
#  (All comments are English only)
# ============================
# Encoding: UTF-8 (no BOM)
# Indentation: 2 spaces (tabs are NOT allowed)
# Tip: values prefixed with "§" use Minecraft color codes.

# ── Version metadata ─────────────────────────────────────────────────────────
# Automatically updated during builds; keep it untouched for support diagnostics.
version: "${project.version}"

# ── Core behaviour ──────────────────────────────────────────────────────────────
# enabled: Master toggle for the entire plugin. Set to false to disable all
#          listeners without removing the jar.
# debug:   Emits extra diagnostic output in console and YAML reports.
# language:Locale of bundled messages (matches files in /lang/ folder).
#          Available codes: en, ru, de, fr, es.

enabled: true
debug: false
language: en

# ── Console colors ──────────────────────────────────────────────────────────────
# These settings control the start-up banner and CLI feedback. When playing on a
# vanilla console (no colors), disable the whole block.
ansi:
  enabled: true
  color-ok: "§a"
  color-warn: "§e"
  color-fail: "§c"
  reset: "§f"

# ── Start-up banner ─────────────────────────────────────────────────────────────
# Shows a fancy header on enable. style can be "block" (default) or "slim".
banner:
  enabled: true
  show-version: true
  style: block
  color: default

# ── Discord webhooks ───────────────────────────────────────────────────────────
# Provide a webhook URL to forward alerts. Rate limiting prevents spam bursts.
discord:
  enabled: false
  webhook-url: ""
  rate-limit-seconds: 10
  send:
    errors: true
    warns: true
    sessions: true
    watchdog: true
    inspector: true

# ── File logging ───────────────────────────────────────────────────────────────
# rotate:      Rolls files daily. keep-days controls retention for archives.
# split-by-player: Creates per-player folders with their own histories.
# legacy.flat-player-files: enable only if you need old plaintext format.
logs:
  rotate: true
  keep-days: 30          # Number of days to retain daily archives (-1 = forever)
  archive: true          # Compress rotated logs into /logs/archive for long-term storage
  split-by-player: true
  legacy:
    flat-player-files: false
  types:
    warns: true         # Captures anything logged through plugin.warn(...)
    errors: true        # Fatal stacktraces and exceptions dumped by plugins
    chat: true          # Global chat history with sender UUID/username metadata
    commands: true      # Every command dispatch (player + console) with context
    players: true       # Includes join/quit events and per-player folders
    disconnects: true   # Tracks kicks, denials, and disconnect screens
    combat: true        # PvP/PvE damage, kills, and death summaries
    inventory: true     # Item pickups/drops, container access, trade logs
    economy: true       # Vault economy transactions and balance updates
    stats: true         # Stat/advancement milestones, playtime counters
    console: true       # Mirrors the live console output into rotating files
    rcon: true          # Remote console sessions and issued commands
    suppressed: true    # Catch-all bucket for anything muted elsewhere
  disconnects:
    capture-screen: true  # Requires ProtocolLib, records server disconnect screens + raw payloads

# ── Database mirroring ───────────────────────────────────────────────────────
# Optional MySQL storage that mirrors every entry without touching filesystem
# rotation. Each enabled log type is stored in its own table using the prefix
# below (for example, "elitelogs_chat" or "elitelogs_errors").
storage:
  database:
    enabled: false
    host: "127.0.0.1"
    port: 3306
    database: "elitelogs"
    username: "elitelogs"
    password: ""
    params: "useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true&serverTimezone=UTC&characterEncoding=UTF-8"
    jdbc-url: ""           # Leave blank to compose from host/port/database/params
    table-prefix: "elitelogs_"
    batch-size: 100
    flush-interval-ticks: 2  # How often queued rows are flushed (1 tick = 50ms)
    auto-upgrade: true       # Keeps tables/indexes up to date and registers new log types automatically
    pool:
      minimum-idle: 1
      maximum-pool-size: 8
      connection-timeout-millis: 8000
      max-lifetime-millis: 1800000

# ── Session reports ────────────────────────────────────────────────────────────
# Save interval defines how often session YAML is written. Disable players/global
# individually if you only need one perspective.
sessions:
  enabled: true
  autosave-minutes: 10
  save-global: true
  save-players: true

# ── Inspector snapshots ────────────────────────────────────────────────────────
# inspector exports server environment and mod/plugin lists on demand.
inspector:
  enabled: true
  include-mods: true
  include-configs: true
  include-garbage: true
  include-server-info: true

# ── Metrics collector ──────────────────────────────────────────────────────────
# Anonymous runtime statistics for spotting trends. Interval in seconds.
metrics:
  enabled: true
  interval-seconds: 60

# ── HTTP API ───────────────────────────────────────────────────────────────────
# Expose recent logs, metrics, and session data for the web dashboard.
api:
  enabled: false
  bind: "127.0.0.1"
  port: 9173
  auth-token: ""       # Leave blank to auto-generate, manage via /elogs apikey
  log-history: 250

# ── Chat suppressor ────────────────────────────────────────────────────────────
# Filters spam by caching recent messages. mode can be "blacklist" or
# "whitelist"; filters accepts regex entries.
suppressor:
  enabled: true
  mode: blacklist
  spam-limit: 1000
  cache-max-entries: 10000
  cache-ttl-seconds: 300
  filters: []

# ── Watchdog automation ────────────────────────────────────────────────────────
# Trigger emergency routines when TPS or error count goes out of range.
# Actions can chain tasks like running the inspector or pinging Discord.
watchdog:
  enabled: true
  tps-threshold: 5.0
  error-threshold: 50
  actions:
    run-inspector: true
    create-crash-report: true
    discord-alert: true
